DSRCProxy 
--<OSS.PDU DSRCProxy.MsgUDPtoWI>--
--<OSS.PDU DSRCProxy.MsgDEVtoUDP>--
--<OSS.PDU DSRCProxy.ProxyAppConfiguration>--
DEFINITIONS AUTOMATIC TAGS ::= BEGIN

IMPORTS
;

MsgUDPtoWI ::= SEQUENCE{
	dataRate				DataRate80211,
	transmitPowerLevel		Power80211,
	doNotModify             DoNotModifyMask OPTIONAL,
	data					Opaque	-- MAC PDU: MAC header + LLC  + WSM/IP
									-- UserPriority included in 802.11 header QOS TID 
}

MsgDEVtoUDP ::= SEQUENCE{
	time		Time64,			-- 64-bit UTC timestamp with microsecond, GPS syncronized
	frame		FrameType
}

FrameType ::= CHOICE{
	wiFrame [0] WiFrame,
	expFrame[1] ExpFrame
}

WiFrame ::= SEQUENCE{
	channelNumber			ChannelNumber80211,
	timeSlot				TimeSlot,
	dataRate				DataRate80211,
	recvPwrAnt1				Power80211,
	recvPwrAnt2				Power80211,
	data					Opaque
}

ExpFrame ::= SEQUENCE{
	exceptionType		ExceptionType,
	exceptionID			ExceptionId OPTIONAL,
	module				Module OPTIONAL,	
	exceptionText		ExceptionText OPTIONAL
}

/* 
		configuration file 
*/
ProxyAppConfiguration ::= SEQUENCE{
	version			UTF8String (SIZE(0..255)), 	-- configuration file date/version
	description		UTF8String (SIZE(0..65535)), -- describes configuration, human readable
	transmitWi		SEQUENCE OF WiInstance,
	transmitUDP		SEQUENCE OF TrInstance
}

WiInstance ::= SEQUENCE{
	radio			RadioInterface,
	mode			ChannelMode,
	antenna			Antenna OPTIONAL,
	listenUDP		ListenUDP
}

TrInstance ::= SEQUENCE{
	address		IPAddress,
	port		UDPPort
}

ListenUDP	::= SEQUENCE{
	port	UDPPort
}

RadioInterface ::= INTEGER{
	radio0 (0),
	radio1 (1),
	radio2 (2),
	radio3 (3)
} (0..16)

ChannelMode ::= CHOICE{
	alternating [0] AlternatingMode,
	continuous [1] ContinuousMode
}

AlternatingMode ::= SEQUENCE{
	channel		ChannelNumber80211,	
	timeSlot	TimeSlot1
}

ContinuousMode ::= SEQUENCE{
	channel		ChannelNumber80211
}

Antenna ::= INTEGER{
	antenna1 (1),
	antenna2 (2)
}

/*
	Common Datatypes
*/

UDPPort ::= INTEGER(0..65535)

IPAddress ::= UTF8String(SIZE(2..255)) -- IPv4, IPv6 or hostname

TimeSlot ::= INTEGER {
	slot0 (0),
	slot1 (1),
    slotEither (2)
} (0..255)

TimeSlot1 ::= INTEGER {	
	slot0 (0),
	slot1 (1),
    both (2)
} (0..255)

UserPriority ::= INTEGER(0..7)

DataRate80211 ::= ENUMERATED {
	-- see Table 9-5—Non-HT reference rate 802.11 - 2012 pp864
	r6Mbps-12BPSK (1),	-- (0xB)
	r9Mbps-34BPSK, -- (0xF)
	r12Mbps-12QPSK, -- (0xA)
	r18Mbps-34QPSK, -- (0xE)
	r24Mbps-1216QAM, -- (0x9)
	r36Mbps-3416QAM, -- (0xD)
	r48Mbps-1264QAM, -- 
	r48Mbps-2364QAM, -- (0x8)
	r54Mbps-3464QAM, -- (0xC)
	r54Mbps-5664QAM -- 
}

Power80211 ::= INTEGER(-128..127)		
-- dBm units

ChannelNumber80211 ::= INTEGER (0..255)

Opaque ::= OCTET STRING

ExceptionType	::= ENUMERATED{
	info,		-- all info messages
	warning,	-- all warnings
	error		-- all errors
}

Module ::= UTF8String (SIZE(0..255))
-- Functiona/Module reporting an exception

ExceptionId ::= INTEGER (0..65535)
-- exception numerical identifier

ExceptionText ::= UTF8String (SIZE(0..1200))
-- short description of exception

Time64 ::= INTEGER (0..18446744073709551615) 
-- 64-bit integer providing system time expressed as the number of microseconds

DoNotModifyMask ::= INTEGER{ 
    seqCtrl     (1),  -- 
    durationId  (2),  -- IEEE80211QoSHeader.DurationId
    ackPolicy   (4),  -- IEEE80211QoSHeader.QoSControl.AckPolicy
    retry       (8)   -- etc....
}

END
